# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from volur.pork.materials.v1alpha2 import material_pb2 as volur_dot_pork_dot_materials_dot_v1alpha2_dot_material__pb2


class MaterialInformationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadMaterialInformation = channel.stream_stream(
                '/volur.pork.materials.v1alpha2.MaterialInformationService/UploadMaterialInformation',
                request_serializer=volur_dot_pork_dot_materials_dot_v1alpha2_dot_material__pb2.UploadMaterialInformationRequest.SerializeToString,
                response_deserializer=volur_dot_pork_dot_materials_dot_v1alpha2_dot_material__pb2.UploadMaterialInformationResponse.FromString,
                _registered_method=True)


class MaterialInformationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def UploadMaterialInformation(self, request_iterator, context):
        """UploadMaterialInformation allows client to upload a stream of material
        inventory information to the server and receive a stream of responses
        containing the status of each upload. This supports batch processing and
        real-time feedback on the operation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MaterialInformationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadMaterialInformation': grpc.stream_stream_rpc_method_handler(
                    servicer.UploadMaterialInformation,
                    request_deserializer=volur_dot_pork_dot_materials_dot_v1alpha2_dot_material__pb2.UploadMaterialInformationRequest.FromString,
                    response_serializer=volur_dot_pork_dot_materials_dot_v1alpha2_dot_material__pb2.UploadMaterialInformationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'volur.pork.materials.v1alpha2.MaterialInformationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MaterialInformationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def UploadMaterialInformation(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            '/volur.pork.materials.v1alpha2.MaterialInformationService/UploadMaterialInformation',
            volur_dot_pork_dot_materials_dot_v1alpha2_dot_material__pb2.UploadMaterialInformationRequest.SerializeToString,
            volur_dot_pork_dot_materials_dot_v1alpha2_dot_material__pb2.UploadMaterialInformationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
