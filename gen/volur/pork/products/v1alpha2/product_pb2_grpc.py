# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from volur.pork.products.v1alpha2 import product_pb2 as volur_dot_pork_dot_products_dot_v1alpha2_dot_product__pb2


class ProductInformationServiceStub(object):
    """Service definition for uploading product information.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.UploadProductInformation = channel.stream_stream(
                '/volur.pork.products.v1alpha2.ProductInformationService/UploadProductInformation',
                request_serializer=volur_dot_pork_dot_products_dot_v1alpha2_dot_product__pb2.UploadProductInformationRequest.SerializeToString,
                response_deserializer=volur_dot_pork_dot_products_dot_v1alpha2_dot_product__pb2.UploadProductInformationResponse.FromString,
                )


class ProductInformationServiceServicer(object):
    """Service definition for uploading product information.
    """

    def UploadProductInformation(self, request_iterator, context):
        """RPC method for uploading product information.
        It takes a stream of UploadProductInformationRequest and returns a stream of UploadProductInformationResponse.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductInformationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'UploadProductInformation': grpc.stream_stream_rpc_method_handler(
                    servicer.UploadProductInformation,
                    request_deserializer=volur_dot_pork_dot_products_dot_v1alpha2_dot_product__pb2.UploadProductInformationRequest.FromString,
                    response_serializer=volur_dot_pork_dot_products_dot_v1alpha2_dot_product__pb2.UploadProductInformationResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'volur.pork.products.v1alpha2.ProductInformationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductInformationService(object):
    """Service definition for uploading product information.
    """

    @staticmethod
    def UploadProductInformation(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/volur.pork.products.v1alpha2.ProductInformationService/UploadProductInformation',
            volur_dot_pork_dot_products_dot_v1alpha2_dot_product__pb2.UploadProductInformationRequest.SerializeToString,
            volur_dot_pork_dot_products_dot_v1alpha2_dot_product__pb2.UploadProductInformationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
