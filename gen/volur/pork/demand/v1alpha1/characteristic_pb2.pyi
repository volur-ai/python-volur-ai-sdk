"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Characteristic(google.protobuf.message.Message):
    """Characteristic defines a characteristic of an entity with a named type and an associated value."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    VALUE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """The name of the characteristic."""
    @property
    def value(self) -> global___CharacteristicValue:
        """The value of the characteristic."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        value: global___CharacteristicValue | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "value", b"value"]) -> None: ...

global___Characteristic = Characteristic

@typing_extensions.final
class CharacteristicValue(google.protobuf.message.Message):
    """CharacteristicValue holds the value of a characteristic which may be one of several defined types."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FLOAT_FIELD_NUMBER: builtins.int
    VALUE_INTEGER_FIELD_NUMBER: builtins.int
    VALUE_STRING_FIELD_NUMBER: builtins.int
    VALUE_BOOL_FIELD_NUMBER: builtins.int
    value_float: builtins.float
    """A floating-point value."""
    value_integer: builtins.int
    """An integer value."""
    value_string: builtins.str
    """A string value."""
    value_bool: builtins.bool
    """A boolean value."""
    def __init__(
        self,
        *,
        value_float: builtins.float = ...,
        value_integer: builtins.int = ...,
        value_string: builtins.str = ...,
        value_bool: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["value_bool", b"value_bool", "value_float", b"value_float", "value_integer", b"value_integer", "value_string", b"value_string"]) -> None: ...

global___CharacteristicValue = CharacteristicValue
